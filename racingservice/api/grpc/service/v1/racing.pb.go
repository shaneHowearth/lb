// Code generated by protoc-gen-go. DO NOT EDIT.
// source: racing.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Race struct {
	Key                  string   `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Advertisedstart      *Start   `protobuf:"bytes,2,opt,name=advertisedstart,proto3" json:"advertisedstart,omitempty"`
	Categoryid           string   `protobuf:"bytes,3,opt,name=categoryid,proto3" json:"categoryid,omitempty"`
	Meetingid            string   `protobuf:"bytes,4,opt,name=meetingid,proto3" json:"meetingid,omitempty"`
	Meetingname          string   `protobuf:"bytes,5,opt,name=meetingname,proto3" json:"meetingname,omitempty"`
	Raceform             *Form    `protobuf:"bytes,6,opt,name=raceform,proto3" json:"raceform,omitempty"`
	Raceid               string   `protobuf:"bytes,7,opt,name=raceid,proto3" json:"raceid,omitempty"`
	Racename             string   `protobuf:"bytes,8,opt,name=racename,proto3" json:"racename,omitempty"`
	Racenumber           int64    `protobuf:"varint,9,opt,name=racenumber,proto3" json:"racenumber,omitempty"`
	Venuecountry         string   `protobuf:"bytes,10,opt,name=venuecountry,proto3" json:"venuecountry,omitempty"`
	Venueid              string   `protobuf:"bytes,11,opt,name=venueid,proto3" json:"venueid,omitempty"`
	Venuename            string   `protobuf:"bytes,12,opt,name=venuename,proto3" json:"venuename,omitempty"`
	Venuestate           string   `protobuf:"bytes,13,opt,name=venuestate,proto3" json:"venuestate,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Race) Reset()         { *m = Race{} }
func (m *Race) String() string { return proto.CompactTextString(m) }
func (*Race) ProtoMessage()    {}
func (*Race) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{0}
}

func (m *Race) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Race.Unmarshal(m, b)
}
func (m *Race) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Race.Marshal(b, m, deterministic)
}
func (m *Race) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Race.Merge(m, src)
}
func (m *Race) XXX_Size() int {
	return xxx_messageInfo_Race.Size(m)
}
func (m *Race) XXX_DiscardUnknown() {
	xxx_messageInfo_Race.DiscardUnknown(m)
}

var xxx_messageInfo_Race proto.InternalMessageInfo

func (m *Race) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *Race) GetAdvertisedstart() *Start {
	if m != nil {
		return m.Advertisedstart
	}
	return nil
}

func (m *Race) GetCategoryid() string {
	if m != nil {
		return m.Categoryid
	}
	return ""
}

func (m *Race) GetMeetingid() string {
	if m != nil {
		return m.Meetingid
	}
	return ""
}

func (m *Race) GetMeetingname() string {
	if m != nil {
		return m.Meetingname
	}
	return ""
}

func (m *Race) GetRaceform() *Form {
	if m != nil {
		return m.Raceform
	}
	return nil
}

func (m *Race) GetRaceid() string {
	if m != nil {
		return m.Raceid
	}
	return ""
}

func (m *Race) GetRacename() string {
	if m != nil {
		return m.Racename
	}
	return ""
}

func (m *Race) GetRacenumber() int64 {
	if m != nil {
		return m.Racenumber
	}
	return 0
}

func (m *Race) GetVenuecountry() string {
	if m != nil {
		return m.Venuecountry
	}
	return ""
}

func (m *Race) GetVenueid() string {
	if m != nil {
		return m.Venueid
	}
	return ""
}

func (m *Race) GetVenuename() string {
	if m != nil {
		return m.Venuename
	}
	return ""
}

func (m *Race) GetVenuestate() string {
	if m != nil {
		return m.Venuestate
	}
	return ""
}

type Start struct {
	Seconds              int64    `protobuf:"varint,1,opt,name=seconds,proto3" json:"seconds,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Start) Reset()         { *m = Start{} }
func (m *Start) String() string { return proto.CompactTextString(m) }
func (*Start) ProtoMessage()    {}
func (*Start) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{1}
}

func (m *Start) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Start.Unmarshal(m, b)
}
func (m *Start) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Start.Marshal(b, m, deterministic)
}
func (m *Start) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Start.Merge(m, src)
}
func (m *Start) XXX_Size() int {
	return xxx_messageInfo_Start.Size(m)
}
func (m *Start) XXX_DiscardUnknown() {
	xxx_messageInfo_Start.DiscardUnknown(m)
}

var xxx_messageInfo_Start proto.InternalMessageInfo

func (m *Start) GetSeconds() int64 {
	if m != nil {
		return m.Seconds
	}
	return 0
}

type Form struct {
	Additionaldata       string          `protobuf:"bytes,1,opt,name=additionaldata,proto3" json:"additionaldata,omitempty"`
	Distance             int64           `protobuf:"varint,2,opt,name=distance,proto3" json:"distance,omitempty"`
	Distancetype         *DistanceType   `protobuf:"bytes,3,opt,name=distancetype,proto3" json:"distancetype,omitempty"`
	Distancetypeid       string          `protobuf:"bytes,4,opt,name=distancetypeid,proto3" json:"distancetypeid,omitempty"`
	Generated            int64           `protobuf:"varint,5,opt,name=generated,proto3" json:"generated,omitempty"`
	Racecomment          string          `protobuf:"bytes,6,opt,name=racecomment,proto3" json:"racecomment,omitempty"`
	Racecommentalt       string          `protobuf:"bytes,7,opt,name=racecommentalt,proto3" json:"racecommentalt,omitempty"`
	Silkbaseurl          string          `protobuf:"bytes,8,opt,name=silkbaseurl,proto3" json:"silkbaseurl,omitempty"`
	Conditions           *TrackCondition `protobuf:"bytes,9,opt,name=conditions,proto3" json:"conditions,omitempty"`
	Trackconditionid     string          `protobuf:"bytes,10,opt,name=trackconditionid,proto3" json:"trackconditionid,omitempty"`
	Weather              *Weather        `protobuf:"bytes,11,opt,name=weather,proto3" json:"weather,omitempty"`
	Weatherid            string          `protobuf:"bytes,12,opt,name=weatherid,proto3" json:"weatherid,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *Form) Reset()         { *m = Form{} }
func (m *Form) String() string { return proto.CompactTextString(m) }
func (*Form) ProtoMessage()    {}
func (*Form) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{2}
}

func (m *Form) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Form.Unmarshal(m, b)
}
func (m *Form) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Form.Marshal(b, m, deterministic)
}
func (m *Form) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Form.Merge(m, src)
}
func (m *Form) XXX_Size() int {
	return xxx_messageInfo_Form.Size(m)
}
func (m *Form) XXX_DiscardUnknown() {
	xxx_messageInfo_Form.DiscardUnknown(m)
}

var xxx_messageInfo_Form proto.InternalMessageInfo

func (m *Form) GetAdditionaldata() string {
	if m != nil {
		return m.Additionaldata
	}
	return ""
}

func (m *Form) GetDistance() int64 {
	if m != nil {
		return m.Distance
	}
	return 0
}

func (m *Form) GetDistancetype() *DistanceType {
	if m != nil {
		return m.Distancetype
	}
	return nil
}

func (m *Form) GetDistancetypeid() string {
	if m != nil {
		return m.Distancetypeid
	}
	return ""
}

func (m *Form) GetGenerated() int64 {
	if m != nil {
		return m.Generated
	}
	return 0
}

func (m *Form) GetRacecomment() string {
	if m != nil {
		return m.Racecomment
	}
	return ""
}

func (m *Form) GetRacecommentalt() string {
	if m != nil {
		return m.Racecommentalt
	}
	return ""
}

func (m *Form) GetSilkbaseurl() string {
	if m != nil {
		return m.Silkbaseurl
	}
	return ""
}

func (m *Form) GetConditions() *TrackCondition {
	if m != nil {
		return m.Conditions
	}
	return nil
}

func (m *Form) GetTrackconditionid() string {
	if m != nil {
		return m.Trackconditionid
	}
	return ""
}

func (m *Form) GetWeather() *Weather {
	if m != nil {
		return m.Weather
	}
	return nil
}

func (m *Form) GetWeatherid() string {
	if m != nil {
		return m.Weatherid
	}
	return ""
}

type DistanceType struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Shortname            string   `protobuf:"bytes,3,opt,name=shortname,proto3" json:"shortname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DistanceType) Reset()         { *m = DistanceType{} }
func (m *DistanceType) String() string { return proto.CompactTextString(m) }
func (*DistanceType) ProtoMessage()    {}
func (*DistanceType) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{3}
}

func (m *DistanceType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DistanceType.Unmarshal(m, b)
}
func (m *DistanceType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DistanceType.Marshal(b, m, deterministic)
}
func (m *DistanceType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DistanceType.Merge(m, src)
}
func (m *DistanceType) XXX_Size() int {
	return xxx_messageInfo_DistanceType.Size(m)
}
func (m *DistanceType) XXX_DiscardUnknown() {
	xxx_messageInfo_DistanceType.DiscardUnknown(m)
}

var xxx_messageInfo_DistanceType proto.InternalMessageInfo

func (m *DistanceType) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *DistanceType) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *DistanceType) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

type TrackCondition struct {
	Id                   string   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Shortname            string   `protobuf:"bytes,3,opt,name=shortname,proto3" json:"shortname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TrackCondition) Reset()         { *m = TrackCondition{} }
func (m *TrackCondition) String() string { return proto.CompactTextString(m) }
func (*TrackCondition) ProtoMessage()    {}
func (*TrackCondition) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{4}
}

func (m *TrackCondition) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TrackCondition.Unmarshal(m, b)
}
func (m *TrackCondition) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TrackCondition.Marshal(b, m, deterministic)
}
func (m *TrackCondition) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TrackCondition.Merge(m, src)
}
func (m *TrackCondition) XXX_Size() int {
	return xxx_messageInfo_TrackCondition.Size(m)
}
func (m *TrackCondition) XXX_DiscardUnknown() {
	xxx_messageInfo_TrackCondition.DiscardUnknown(m)
}

var xxx_messageInfo_TrackCondition proto.InternalMessageInfo

func (m *TrackCondition) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *TrackCondition) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *TrackCondition) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

type Weather struct {
	Iconurl              string   `protobuf:"bytes,1,opt,name=iconurl,proto3" json:"iconurl,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Shortname            string   `protobuf:"bytes,4,opt,name=shortname,proto3" json:"shortname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Weather) Reset()         { *m = Weather{} }
func (m *Weather) String() string { return proto.CompactTextString(m) }
func (*Weather) ProtoMessage()    {}
func (*Weather) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{5}
}

func (m *Weather) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Weather.Unmarshal(m, b)
}
func (m *Weather) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Weather.Marshal(b, m, deterministic)
}
func (m *Weather) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Weather.Merge(m, src)
}
func (m *Weather) XXX_Size() int {
	return xxx_messageInfo_Weather.Size(m)
}
func (m *Weather) XXX_DiscardUnknown() {
	xxx_messageInfo_Weather.DiscardUnknown(m)
}

var xxx_messageInfo_Weather proto.InternalMessageInfo

func (m *Weather) GetIconurl() string {
	if m != nil {
		return m.Iconurl
	}
	return ""
}

func (m *Weather) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Weather) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Weather) GetShortname() string {
	if m != nil {
		return m.Shortname
	}
	return ""
}

type Races struct {
	Races                []*Race  `protobuf:"bytes,1,rep,name=races,proto3" json:"races,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Races) Reset()         { *m = Races{} }
func (m *Races) String() string { return proto.CompactTextString(m) }
func (*Races) ProtoMessage()    {}
func (*Races) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{6}
}

func (m *Races) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Races.Unmarshal(m, b)
}
func (m *Races) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Races.Marshal(b, m, deterministic)
}
func (m *Races) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Races.Merge(m, src)
}
func (m *Races) XXX_Size() int {
	return xxx_messageInfo_Races.Size(m)
}
func (m *Races) XXX_DiscardUnknown() {
	xxx_messageInfo_Races.DiscardUnknown(m)
}

var xxx_messageInfo_Races proto.InternalMessageInfo

func (m *Races) GetRaces() []*Race {
	if m != nil {
		return m.Races
	}
	return nil
}

type Acknowledgement struct {
	Api                  string   `protobuf:"bytes,1,opt,name=api,proto3" json:"api,omitempty"`
	Errormessage         string   `protobuf:"bytes,3,opt,name=errormessage,proto3" json:"errormessage,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Acknowledgement) Reset()         { *m = Acknowledgement{} }
func (m *Acknowledgement) String() string { return proto.CompactTextString(m) }
func (*Acknowledgement) ProtoMessage()    {}
func (*Acknowledgement) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{7}
}

func (m *Acknowledgement) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Acknowledgement.Unmarshal(m, b)
}
func (m *Acknowledgement) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Acknowledgement.Marshal(b, m, deterministic)
}
func (m *Acknowledgement) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Acknowledgement.Merge(m, src)
}
func (m *Acknowledgement) XXX_Size() int {
	return xxx_messageInfo_Acknowledgement.Size(m)
}
func (m *Acknowledgement) XXX_DiscardUnknown() {
	xxx_messageInfo_Acknowledgement.DiscardUnknown(m)
}

var xxx_messageInfo_Acknowledgement proto.InternalMessageInfo

func (m *Acknowledgement) GetApi() string {
	if m != nil {
		return m.Api
	}
	return ""
}

func (m *Acknowledgement) GetErrormessage() string {
	if m != nil {
		return m.Errormessage
	}
	return ""
}

type RacesRequest struct {
	Method               string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	Count                int64    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	Categories           []string `protobuf:"bytes,3,rep,name=categories,proto3" json:"categories,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *RacesRequest) Reset()         { *m = RacesRequest{} }
func (m *RacesRequest) String() string { return proto.CompactTextString(m) }
func (*RacesRequest) ProtoMessage()    {}
func (*RacesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_265c1bfdc1884b7e, []int{8}
}

func (m *RacesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_RacesRequest.Unmarshal(m, b)
}
func (m *RacesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_RacesRequest.Marshal(b, m, deterministic)
}
func (m *RacesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_RacesRequest.Merge(m, src)
}
func (m *RacesRequest) XXX_Size() int {
	return xxx_messageInfo_RacesRequest.Size(m)
}
func (m *RacesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_RacesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_RacesRequest proto.InternalMessageInfo

func (m *RacesRequest) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *RacesRequest) GetCount() int64 {
	if m != nil {
		return m.Count
	}
	return 0
}

func (m *RacesRequest) GetCategories() []string {
	if m != nil {
		return m.Categories
	}
	return nil
}

func init() {
	proto.RegisterType((*Race)(nil), "v1.Race")
	proto.RegisterType((*Start)(nil), "v1.Start")
	proto.RegisterType((*Form)(nil), "v1.Form")
	proto.RegisterType((*DistanceType)(nil), "v1.DistanceType")
	proto.RegisterType((*TrackCondition)(nil), "v1.TrackCondition")
	proto.RegisterType((*Weather)(nil), "v1.Weather")
	proto.RegisterType((*Races)(nil), "v1.Races")
	proto.RegisterType((*Acknowledgement)(nil), "v1.Acknowledgement")
	proto.RegisterType((*RacesRequest)(nil), "v1.RacesRequest")
}

func init() { proto.RegisterFile("racing.proto", fileDescriptor_265c1bfdc1884b7e) }

var fileDescriptor_265c1bfdc1884b7e = []byte{
	// 691 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xc1, 0x6e, 0xdb, 0x38,
	0x10, 0x8d, 0x2d, 0x3b, 0xb6, 0x47, 0x4e, 0x62, 0x70, 0x17, 0x0b, 0x21, 0x58, 0x04, 0x5e, 0x61,
	0x77, 0x9b, 0xf6, 0x90, 0x22, 0x4e, 0x7f, 0xa0, 0x48, 0xd1, 0x5c, 0x0b, 0x26, 0x40, 0x2f, 0xbd,
	0x30, 0xe2, 0xd4, 0x21, 0x6c, 0x49, 0x2e, 0x49, 0x3b, 0xf0, 0xf7, 0xf4, 0xa3, 0xfa, 0x3b, 0xc5,
	0x8c, 0x28, 0x59, 0x76, 0xd0, 0x5b, 0x6f, 0xf3, 0xde, 0x90, 0x33, 0x9c, 0x37, 0xc3, 0x81, 0xb1,
	0x55, 0x99, 0x29, 0xe6, 0x57, 0x2b, 0x5b, 0xfa, 0x52, 0x74, 0x37, 0xd7, 0xe9, 0xf7, 0x08, 0x7a,
	0x52, 0x65, 0x28, 0x26, 0x10, 0x2d, 0x70, 0x9b, 0x74, 0xa6, 0x9d, 0xcb, 0x91, 0x24, 0x53, 0xdc,
	0xc0, 0x99, 0xd2, 0x1b, 0xb4, 0xde, 0x38, 0xd4, 0xce, 0x2b, 0xeb, 0x93, 0xee, 0xb4, 0x73, 0x19,
	0xcf, 0x46, 0x57, 0x9b, 0xeb, 0xab, 0x7b, 0x22, 0xe4, 0xe1, 0x09, 0x71, 0x01, 0x90, 0x29, 0x8f,
	0xf3, 0xd2, 0x6e, 0x8d, 0x4e, 0x22, 0x8e, 0xd6, 0x62, 0xc4, 0xdf, 0x30, 0xca, 0x11, 0xbd, 0x29,
	0xe6, 0x46, 0x27, 0x3d, 0x76, 0xef, 0x08, 0x31, 0x85, 0x38, 0x80, 0x42, 0xe5, 0x98, 0xf4, 0xd9,
	0xdf, 0xa6, 0xc4, 0xbf, 0x30, 0xb4, 0x2a, 0xc3, 0xaf, 0xa5, 0xcd, 0x93, 0x63, 0x7e, 0xcd, 0x90,
	0x5e, 0xf3, 0xb1, 0xb4, 0xb9, 0x6c, 0x3c, 0xe2, 0x2f, 0x38, 0x26, 0xdb, 0xe8, 0x64, 0xc0, 0x21,
	0x02, 0x12, 0xe7, 0xd5, 0x6d, 0x0e, 0x3e, 0x64, 0x4f, 0x83, 0xe9, 0xe5, 0x6c, 0xaf, 0xf3, 0x47,
	0xb4, 0xc9, 0x68, 0xda, 0xb9, 0x8c, 0x64, 0x8b, 0x11, 0x29, 0x8c, 0x37, 0x58, 0xac, 0x31, 0x2b,
	0xd7, 0x85, 0xb7, 0xdb, 0x04, 0xf8, 0xfe, 0x1e, 0x27, 0x12, 0x18, 0x30, 0x36, 0x3a, 0x89, 0xd9,
	0x5d, 0x43, 0xaa, 0x9b, 0x4d, 0x4e, 0x3d, 0xae, 0xea, 0x6e, 0x08, 0xca, 0xcd, 0xc0, 0x79, 0xe5,
	0x31, 0x39, 0xa9, 0x54, 0xdb, 0x31, 0xe9, 0x3f, 0xd0, 0x67, 0xbd, 0x29, 0x81, 0xc3, 0xac, 0x2c,
	0xb4, 0xe3, 0x4e, 0x45, 0xb2, 0x86, 0xe9, 0x8f, 0x08, 0x7a, 0xa4, 0x82, 0xf8, 0x1f, 0x4e, 0x95,
	0xd6, 0xc6, 0x9b, 0xb2, 0x50, 0x4b, 0xad, 0xbc, 0x0a, 0x3d, 0x3d, 0x60, 0x49, 0x0b, 0x6d, 0x9c,
	0x57, 0x45, 0x86, 0xdc, 0xd7, 0x48, 0x36, 0x58, 0xbc, 0x83, 0x71, 0x6d, 0xfb, 0xed, 0x0a, 0xb9,
	0x8f, 0xf1, 0x6c, 0x42, 0x4a, 0x7f, 0x08, 0xfc, 0xc3, 0x76, 0x85, 0x72, 0xef, 0x14, 0x65, 0x6e,
	0xe3, 0xa6, 0xc1, 0x07, 0x2c, 0x69, 0x31, 0xc7, 0x02, 0xad, 0xf2, 0xa8, 0xb9, 0xc7, 0x91, 0xdc,
	0x11, 0x34, 0x03, 0xa4, 0x7a, 0x56, 0xe6, 0x39, 0x16, 0x9e, 0x9b, 0x3c, 0x92, 0x6d, 0x8a, 0xf2,
	0xb4, 0xa0, 0x5a, 0xfa, 0xd0, 0xe5, 0x03, 0x96, 0x22, 0x39, 0xb3, 0x5c, 0x3c, 0x2a, 0x87, 0x6b,
	0xbb, 0x0c, 0x0d, 0x6f, 0x53, 0x62, 0x06, 0x40, 0xea, 0xb1, 0x2c, 0x8e, 0x7b, 0x1e, 0xcf, 0x04,
	0x55, 0xf9, 0x60, 0x55, 0xb6, 0xb8, 0xad, 0x5d, 0xb2, 0x75, 0x4a, 0xbc, 0x81, 0x89, 0x27, 0x6f,
	0x43, 0x19, 0x1d, 0x66, 0xe1, 0x05, 0x2f, 0xfe, 0x83, 0xc1, 0x33, 0x2a, 0xff, 0x84, 0x96, 0xe7,
	0x21, 0x9e, 0xc5, 0x14, 0xfc, 0x73, 0x45, 0xc9, 0xda, 0x47, 0x82, 0x04, 0xd3, 0xe8, 0x7a, 0x38,
	0x1a, 0x22, 0xfd, 0x04, 0xe3, 0xb6, 0xe8, 0xe2, 0x14, 0xba, 0x46, 0x87, 0xa6, 0x76, 0x8d, 0x16,
	0x02, 0x7a, 0x3c, 0x55, 0x5d, 0x66, 0xd8, 0xa6, 0x88, 0xee, 0xa9, 0xb4, 0x9e, 0x1d, 0xd5, 0x2f,
	0xdc, 0x11, 0xa9, 0x84, 0xd3, 0xfd, 0x02, 0x7f, 0x43, 0x4c, 0x84, 0x41, 0xa8, 0x8b, 0x86, 0xd4,
	0x64, 0x65, 0x41, 0x9a, 0x57, 0x11, 0x6b, 0x18, 0xd2, 0x74, 0x5f, 0xa4, 0x89, 0x7e, 0x95, 0xa6,
	0x77, 0x98, 0xe6, 0x15, 0xf4, 0x69, 0x5d, 0x39, 0x71, 0x01, 0x7d, 0x6a, 0x37, 0xfd, 0x83, 0xa8,
	0xde, 0x02, 0xe4, 0x91, 0x15, 0x9d, 0xde, 0xc1, 0xd9, 0xfb, 0x6c, 0x51, 0x94, 0xcf, 0x4b, 0xd4,
	0x73, 0xe4, 0xb9, 0x99, 0x40, 0xa4, 0x56, 0xa6, 0x5e, 0x71, 0x6a, 0x65, 0xe8, 0x4f, 0xa3, 0xb5,
	0xa5, 0xcd, 0xd1, 0x39, 0x35, 0xaf, 0xdf, 0xb1, 0xc7, 0xa5, 0x5f, 0x60, 0xcc, 0x19, 0x25, 0x7e,
	0xa3, 0xef, 0x48, 0xbb, 0x25, 0x47, 0xff, 0x54, 0xd6, 0x72, 0x05, 0x24, 0xfe, 0x84, 0x3e, 0xaf,
	0x81, 0xf0, 0x99, 0x2a, 0xd0, 0xda, 0x87, 0x06, 0x5d, 0x12, 0x4d, 0xa3, 0xd6, 0x3e, 0x34, 0xe8,
	0x66, 0x0b, 0x38, 0x91, 0xbc, 0x93, 0xef, 0xd1, 0x6e, 0x4c, 0x86, 0xe2, 0x2d, 0xc4, 0xb7, 0x16,
	0x95, 0xc7, 0xaa, 0xcc, 0x51, 0x5d, 0x97, 0x3b, 0xff, 0x83, 0xcc, 0x83, 0x9a, 0xd2, 0x23, 0xf1,
	0x1a, 0x86, 0x77, 0xe8, 0xab, 0xd3, 0x93, 0xe6, 0x74, 0x78, 0xed, 0xf9, 0xee, 0x7e, 0x7a, 0xf4,
	0x78, 0xcc, 0x7b, 0xff, 0xe6, 0x67, 0x00, 0x00, 0x00, 0xff, 0xff, 0x89, 0x3a, 0x47, 0x80, 0x07,
	0x06, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// RacingServiceClient is the client API for RacingService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type RacingServiceClient interface {
	CreateRaces(ctx context.Context, in *Races, opts ...grpc.CallOption) (*Acknowledgement, error)
	GetRaces(ctx context.Context, in *RacesRequest, opts ...grpc.CallOption) (*Races, error)
}

type racingServiceClient struct {
	cc *grpc.ClientConn
}

func NewRacingServiceClient(cc *grpc.ClientConn) RacingServiceClient {
	return &racingServiceClient{cc}
}

func (c *racingServiceClient) CreateRaces(ctx context.Context, in *Races, opts ...grpc.CallOption) (*Acknowledgement, error) {
	out := new(Acknowledgement)
	err := c.cc.Invoke(ctx, "/v1.RacingService/CreateRaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *racingServiceClient) GetRaces(ctx context.Context, in *RacesRequest, opts ...grpc.CallOption) (*Races, error) {
	out := new(Races)
	err := c.cc.Invoke(ctx, "/v1.RacingService/GetRaces", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// RacingServiceServer is the server API for RacingService service.
type RacingServiceServer interface {
	CreateRaces(context.Context, *Races) (*Acknowledgement, error)
	GetRaces(context.Context, *RacesRequest) (*Races, error)
}

// UnimplementedRacingServiceServer can be embedded to have forward compatible implementations.
type UnimplementedRacingServiceServer struct {
}

func (*UnimplementedRacingServiceServer) CreateRaces(ctx context.Context, req *Races) (*Acknowledgement, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateRaces not implemented")
}
func (*UnimplementedRacingServiceServer) GetRaces(ctx context.Context, req *RacesRequest) (*Races, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetRaces not implemented")
}

func RegisterRacingServiceServer(s *grpc.Server, srv RacingServiceServer) {
	s.RegisterService(&_RacingService_serviceDesc, srv)
}

func _RacingService_CreateRaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Races)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RacingServiceServer).CreateRaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RacingService/CreateRaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RacingServiceServer).CreateRaces(ctx, req.(*Races))
	}
	return interceptor(ctx, in, info, handler)
}

func _RacingService_GetRaces_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(RacesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(RacingServiceServer).GetRaces(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.RacingService/GetRaces",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(RacingServiceServer).GetRaces(ctx, req.(*RacesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _RacingService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.RacingService",
	HandlerType: (*RacingServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateRaces",
			Handler:    _RacingService_CreateRaces_Handler,
		},
		{
			MethodName: "GetRaces",
			Handler:    _RacingService_GetRaces_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "racing.proto",
}
